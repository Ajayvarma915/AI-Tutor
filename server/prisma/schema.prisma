// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String?
  provider String
  oauth_id String?
  image    String?
  role     Role 
  createdAt DateTime @default(now())
  quizSessions QuizSession[]
  @@map("users")
}

model Classes {
  id        Int      @id @default(autoincrement())
  name      String   
  pdffile   Bytes
  createdAt DateTime @default(now())
  Courses   Courses? @relation(fields: [coursesId], references: [id])
  coursesId Int?
  quizSessions QuizSession[]
}

model Courses {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  classes     Classes[]
}

model QuizSession{
  id          Int       @id @default(autoincrement())
  userId      Int
  classesId   Int
  status      QuizStatus @default(IN_PROGRESS)
  startedAt   DateTime @default(now())
  completedAt DateTime?

  user        User      @relation(fields:[userId],references:[id])
  classes     Classes   @relation(fields:[classesId],references:[id])

  score       Int?
  responses   Response[]
  questions   GeneratedQuestion[]
}

model GeneratedQuestion{
  id          Int        @id @default(autoincrement())
  quizSessionId Int
  question      String
  options       String[]
  correctAnswer String?

  quizSession QuizSession  @relation(fields:[quizSessionId],references:[id])
}

model Response{
  id          Int       @id @default(autoincrement())
  quizSessionId Int
  questionId Int
  answer      String?
  isAnswered  Boolean @default(false)
  isCorrect   Boolean

  quizSession  QuizSession @relation(fields:[quizSessionId],references:[id])
}

enum Role{
  teacher
  student
}

enum QuizStatus{
  IN_PROGRESS
  COMPLETED
  NOT_STARTED
}